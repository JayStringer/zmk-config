/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define NAV     1
#define CHARS   2
#define NUMBERS 3
#define UTILITY 4

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L   |  U  |  Y  |  ;  | BKSP |
// | CTRL |  A  |  R  |  S  |  T  |  G  |   |  M  |  N   |  E  |  I  |  O  |  '   |
// | SHFT |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H   |  ,  |  .  |  /  | SHFT |
//                    | GUI | BKSP| TAB |   | ENT | SPC  | ALT |
                        bindings = <
   &lt UTILITY ESC  &kp Q  &kp W  &kp F  &kp P  &kp B    &kp J  &kp L  &kp U       &kp Y    &kp SEMI  &kp BSPC
   &kp LCTRL        &kp A  &kp R  &kp S  &kp T  &kp G    &kp M  &kp N  &kp E       &kp I    &kp O     &kp SQT
   &kp LSHFT        &kp Z  &kp X  &kp C  &kp D  &kp V    &kp K  &kp H  &kp COMMA   &kp DOT  &kp FSLH  &kp RSHFT
   &kp LGUI  &kp BSPC  &lt CHARS TAB                     &lt NAV RET   &lt NUMBERS SPACE  &kp RALT
                        >;
                };

                navigation_layer {
// -----------------------------------------------------------------------------------------
// | ESC  |     |     |     |     |     |   |     | HOME| UP  | END |     |      |
// | CTRL |     | CTRL| ALT | SHFT|     |   |     | LEFT| DOWN| RGHT|     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    |     |     |     |   |     |     |     |
                        bindings = <
   &kp ESC    &none  &none      &none     &none      &none     &none  &kp HOME  &kp UP    &kp END    &none  &none
   &kp LCTRL  &none  &kp LCTRL  &kp RALT  &kp LSHFT  &none     &none  &kp LEFT  &kp DOWN  &kp RIGHT  &none  &none
   &kp LSHFT  &none  &none      &none     &none      &none     &none  &none     &none     &none      &none  &none
   &none  &none  &none                                         &trans  &none  &none
                        >;
                };


                characters_layer {
// -----------------------------------------------------------------------------------------
// |      |  !  |  @  |  #  |  $  |  %  |   |  ^  |  (  |  )  |  :  |  ;  |      |
// |      | BKSP| CTRL| ALT | SHFT|  /  |   |  |  |  [  |  ]  |  '  |  `  |      |
// |      | DEL |     |     |     |     |   |  &  |  <  |  >  |  +  |  *  |      |
//                    |     |     |     |   |  -  |SPACE|  =  |
                        bindings = <
   &none  &kp EXCL  &kp AT     &kp HASH  &kp DLLR   &kp PRCNT    &kp CARET  &kp LPAR  &kp RPAR  &kp COLON  &kp SEMI   &none
   &none  &kp BSPC  &kp LCTRL  &kp LALT  &kp LSHFT  &kp FSLH     &kp BSLH   &kp LBKT  &kp RBKT  &kp APOS   &kp GRAVE  &none
   &none  &kp DEL   &none      &none     &none      &none        &none      &none     &none     &none      &none      &none
   &none  &none  &trans                                          &kp MINUS &kp SPACE  &kp EQUAL
                        >;
                };


                numbers_layer {
// -----------------------------------------------------------------------------------------
// |      |     |  F7 |  F8 |  F9 | F10 |   |     |  7  |  8  |  9  |     |      |
// |      |     |  F4 |  F5 |  F6 | F11 |   |     |  4  |  5  |  6  |     |      |
// |      |     |  F1 |  F2 |  F3 | F12 |   |     |  1  |  2  |  3  |     |      |
//                    | CTRL| ALT | SHFT|   |     |     |  0  |
                        bindings = <
   &none  &none  &kp F7  &kp F8  &kp F9  &kp F10    &none  &kp N7  &kp N8  &kp N9  &none  &none
   &none  &none  &kp F4  &kp F5  &kp F6  &kp F11    &none  &kp N4  &kp N5  &kp N6  &none  &none
   &none  &none  &kp F1  &kp F2  &kp F3  &kp F12    &none  &kp N1  &kp N2  &kp N3  &none  &none
   &kp LCTRL  &kp LALT  &kp LSHFT                   &none  &trans  &kp N0
                        >;
                };


                utility_layer {
// -----------------------------------------------------------------------------------------
// |      |BTCLR|     |     |     |     |   |     |     |     |     |     |      |
// |      | BT1 |     |     |     |     |   |     |     |     |     |     |      |
// |      | BT2 |     |     |     |     |   |     |     |     |     |     |      |
//                    |     |     |     |   |     |     |     |
                        bindings = <
   &trans &bt BT_CLR    &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
   &none  &bt BT_SEL 1  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
   &none  &bt BT_SEL 2  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
   &none  &none  &none                                &none  &none  &none
                        >;
                };

                template_layer {
// -----------------------------------------------------------------------------------------
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
//                    |     |     |     |   |     |     |     |
                        bindings = <
   &trans &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
   &none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
   &none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
   &none  &none  &none                         &none  &none  &none
                        >;
                };
};
